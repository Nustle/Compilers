     0  *ast.File {
     1  .  Doc: nil
     2  .  Package: ast_test.go:1:1
     3  .  Name: *ast.Ident {
     4  .  .  NamePos: ast_test.go:1:9
     5  .  .  Name: "main"
     6  .  .  Obj: nil
     7  .  }
     8  .  Decls: []ast.Decl (len = 3) {
     9  .  .  0: *ast.GenDecl {
    10  .  .  .  Doc: nil
    11  .  .  .  TokPos: ast_test.go:3:1
    12  .  .  .  Tok: import
    13  .  .  .  Lparen: -
    14  .  .  .  Specs: []ast.Spec (len = 1) {
    15  .  .  .  .  0: *ast.ImportSpec {
    16  .  .  .  .  .  Doc: nil
    17  .  .  .  .  .  Name: nil
    18  .  .  .  .  .  Path: *ast.BasicLit {
    19  .  .  .  .  .  .  ValuePos: ast_test.go:3:8
    20  .  .  .  .  .  .  Kind: STRING
    21  .  .  .  .  .  .  Value: "\"fmt\""
    22  .  .  .  .  .  }
    23  .  .  .  .  .  Comment: nil
    24  .  .  .  .  .  EndPos: -
    25  .  .  .  .  }
    26  .  .  .  }
    27  .  .  .  Rparen: -
    28  .  .  }
    29  .  .  1: *ast.FuncDecl {
    30  .  .  .  Doc: nil
    31  .  .  .  Recv: nil
    32  .  .  .  Name: *ast.Ident {
    33  .  .  .  .  NamePos: ast_test.go:5:6
    34  .  .  .  .  Name: "min"
    35  .  .  .  .  Obj: *ast.Object {
    36  .  .  .  .  .  Kind: func
    37  .  .  .  .  .  Name: "min"
    38  .  .  .  .  .  Decl: *(obj @ 29)
    39  .  .  .  .  .  Data: nil
    40  .  .  .  .  .  Type: nil
    41  .  .  .  .  }
    42  .  .  .  }
    43  .  .  .  Type: *ast.FuncType {
    44  .  .  .  .  Func: ast_test.go:5:1
    45  .  .  .  .  TypeParams: nil
    46  .  .  .  .  Params: *ast.FieldList {
    47  .  .  .  .  .  Opening: ast_test.go:5:9
    48  .  .  .  .  .  List: []*ast.Field (len = 1) {
    49  .  .  .  .  .  .  0: *ast.Field {
    50  .  .  .  .  .  .  .  Doc: nil
    51  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 2) {
    52  .  .  .  .  .  .  .  .  0: *ast.Ident {
    53  .  .  .  .  .  .  .  .  .  NamePos: ast_test.go:5:10
    54  .  .  .  .  .  .  .  .  .  Name: "a"
    55  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
    56  .  .  .  .  .  .  .  .  .  .  Kind: var
    57  .  .  .  .  .  .  .  .  .  .  Name: "a"
    58  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 49)
    59  .  .  .  .  .  .  .  .  .  .  Data: nil
    60  .  .  .  .  .  .  .  .  .  .  Type: nil
    61  .  .  .  .  .  .  .  .  .  }
    62  .  .  .  .  .  .  .  .  }
    63  .  .  .  .  .  .  .  .  1: *ast.Ident {
    64  .  .  .  .  .  .  .  .  .  NamePos: ast_test.go:5:13
    65  .  .  .  .  .  .  .  .  .  Name: "b"
    66  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
    67  .  .  .  .  .  .  .  .  .  .  Kind: var
    68  .  .  .  .  .  .  .  .  .  .  Name: "b"
    69  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 49)
    70  .  .  .  .  .  .  .  .  .  .  Data: nil
    71  .  .  .  .  .  .  .  .  .  .  Type: nil
    72  .  .  .  .  .  .  .  .  .  }
    73  .  .  .  .  .  .  .  .  }
    74  .  .  .  .  .  .  .  }
    75  .  .  .  .  .  .  .  Type: *ast.Ident {
    76  .  .  .  .  .  .  .  .  NamePos: ast_test.go:5:15
    77  .  .  .  .  .  .  .  .  Name: "int"
    78  .  .  .  .  .  .  .  .  Obj: nil
    79  .  .  .  .  .  .  .  }
    80  .  .  .  .  .  .  .  Tag: nil
    81  .  .  .  .  .  .  .  Comment: nil
    82  .  .  .  .  .  .  }
    83  .  .  .  .  .  }
    84  .  .  .  .  .  Closing: ast_test.go:5:18
    85  .  .  .  .  }
    86  .  .  .  .  Results: *ast.FieldList {
    87  .  .  .  .  .  Opening: -
    88  .  .  .  .  .  List: []*ast.Field (len = 1) {
    89  .  .  .  .  .  .  0: *ast.Field {
    90  .  .  .  .  .  .  .  Doc: nil
    91  .  .  .  .  .  .  .  Names: nil
    92  .  .  .  .  .  .  .  Type: *ast.Ident {
    93  .  .  .  .  .  .  .  .  NamePos: ast_test.go:5:20
    94  .  .  .  .  .  .  .  .  Name: "int"
    95  .  .  .  .  .  .  .  .  Obj: nil
    96  .  .  .  .  .  .  .  }
    97  .  .  .  .  .  .  .  Tag: nil
    98  .  .  .  .  .  .  .  Comment: nil
    99  .  .  .  .  .  .  }
   100  .  .  .  .  .  }
   101  .  .  .  .  .  Closing: -
   102  .  .  .  .  }
   103  .  .  .  }
   104  .  .  .  Body: *ast.BlockStmt {
   105  .  .  .  .  Lbrace: ast_test.go:5:24
   106  .  .  .  .  List: []ast.Stmt (len = 2) {
   107  .  .  .  .  .  0: *ast.IfStmt {
   108  .  .  .  .  .  .  If: ast_test.go:6:2
   109  .  .  .  .  .  .  Init: nil
   110  .  .  .  .  .  .  Cond: *ast.BinaryExpr {
   111  .  .  .  .  .  .  .  X: *ast.Ident {
   112  .  .  .  .  .  .  .  .  NamePos: ast_test.go:6:5
   113  .  .  .  .  .  .  .  .  Name: "a"
   114  .  .  .  .  .  .  .  .  Obj: *(obj @ 55)
   115  .  .  .  .  .  .  .  }
   116  .  .  .  .  .  .  .  OpPos: ast_test.go:6:7
   117  .  .  .  .  .  .  .  Op: <
   118  .  .  .  .  .  .  .  Y: *ast.Ident {
   119  .  .  .  .  .  .  .  .  NamePos: ast_test.go:6:9
   120  .  .  .  .  .  .  .  .  Name: "b"
   121  .  .  .  .  .  .  .  .  Obj: *(obj @ 66)
   122  .  .  .  .  .  .  .  }
   123  .  .  .  .  .  .  }
   124  .  .  .  .  .  .  Body: *ast.BlockStmt {
   125  .  .  .  .  .  .  .  Lbrace: ast_test.go:6:11
   126  .  .  .  .  .  .  .  List: []ast.Stmt (len = 1) {
   127  .  .  .  .  .  .  .  .  0: *ast.ReturnStmt {
   128  .  .  .  .  .  .  .  .  .  Return: ast_test.go:7:3
   129  .  .  .  .  .  .  .  .  .  Results: []ast.Expr (len = 1) {
   130  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
   131  .  .  .  .  .  .  .  .  .  .  .  NamePos: ast_test.go:7:10
   132  .  .  .  .  .  .  .  .  .  .  .  Name: "a"
   133  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 55)
   134  .  .  .  .  .  .  .  .  .  .  }
   135  .  .  .  .  .  .  .  .  .  }
   136  .  .  .  .  .  .  .  .  }
   137  .  .  .  .  .  .  .  }
   138  .  .  .  .  .  .  .  Rbrace: ast_test.go:8:2
   139  .  .  .  .  .  .  }
   140  .  .  .  .  .  .  Else: nil
   141  .  .  .  .  .  }
   142  .  .  .  .  .  1: *ast.ReturnStmt {
   143  .  .  .  .  .  .  Return: ast_test.go:9:2
   144  .  .  .  .  .  .  Results: []ast.Expr (len = 1) {
   145  .  .  .  .  .  .  .  0: *ast.Ident {
   146  .  .  .  .  .  .  .  .  NamePos: ast_test.go:9:9
   147  .  .  .  .  .  .  .  .  Name: "b"
   148  .  .  .  .  .  .  .  .  Obj: *(obj @ 66)
   149  .  .  .  .  .  .  .  }
   150  .  .  .  .  .  .  }
   151  .  .  .  .  .  }
   152  .  .  .  .  }
   153  .  .  .  .  Rbrace: ast_test.go:10:1
   154  .  .  .  }
   155  .  .  }
   156  .  .  2: *ast.FuncDecl {
   157  .  .  .  Doc: nil
   158  .  .  .  Recv: nil
   159  .  .  .  Name: *ast.Ident {
   160  .  .  .  .  NamePos: ast_test.go:12:6
   161  .  .  .  .  Name: "main"
   162  .  .  .  .  Obj: *ast.Object {
   163  .  .  .  .  .  Kind: func
   164  .  .  .  .  .  Name: "main"
   165  .  .  .  .  .  Decl: *(obj @ 156)
   166  .  .  .  .  .  Data: nil
   167  .  .  .  .  .  Type: nil
   168  .  .  .  .  }
   169  .  .  .  }
   170  .  .  .  Type: *ast.FuncType {
   171  .  .  .  .  Func: ast_test.go:12:1
   172  .  .  .  .  TypeParams: nil
   173  .  .  .  .  Params: *ast.FieldList {
   174  .  .  .  .  .  Opening: ast_test.go:12:10
   175  .  .  .  .  .  List: nil
   176  .  .  .  .  .  Closing: ast_test.go:12:11
   177  .  .  .  .  }
   178  .  .  .  .  Results: nil
   179  .  .  .  }
   180  .  .  .  Body: *ast.BlockStmt {
   181  .  .  .  .  Lbrace: ast_test.go:12:13
   182  .  .  .  .  List: []ast.Stmt (len = 2) {
   183  .  .  .  .  .  0: *ast.AssignStmt {
   184  .  .  .  .  .  .  Lhs: []ast.Expr (len = 1) {
   185  .  .  .  .  .  .  .  0: *ast.Ident {
   186  .  .  .  .  .  .  .  .  NamePos: ast_test.go:13:2
   187  .  .  .  .  .  .  .  .  Name: "x"
   188  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   189  .  .  .  .  .  .  .  .  .  Kind: var
   190  .  .  .  .  .  .  .  .  .  Name: "x"
   191  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 183)
   192  .  .  .  .  .  .  .  .  .  Data: nil
   193  .  .  .  .  .  .  .  .  .  Type: nil
   194  .  .  .  .  .  .  .  .  }
   195  .  .  .  .  .  .  .  }
   196  .  .  .  .  .  .  }
   197  .  .  .  .  .  .  TokPos: ast_test.go:13:4
   198  .  .  .  .  .  .  Tok: :=
   199  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {
   200  .  .  .  .  .  .  .  0: *ast.BasicLit {
   201  .  .  .  .  .  .  .  .  ValuePos: ast_test.go:13:7
   202  .  .  .  .  .  .  .  .  Kind: INT
   203  .  .  .  .  .  .  .  .  Value: "6"
   204  .  .  .  .  .  .  .  }
   205  .  .  .  .  .  .  }
   206  .  .  .  .  .  }
   207  .  .  .  .  .  1: *ast.ForStmt {
   208  .  .  .  .  .  .  For: ast_test.go:14:2
   209  .  .  .  .  .  .  Init: *ast.AssignStmt {
   210  .  .  .  .  .  .  .  Lhs: []ast.Expr (len = 1) {
   211  .  .  .  .  .  .  .  .  0: *ast.Ident {
   212  .  .  .  .  .  .  .  .  .  NamePos: ast_test.go:14:6
   213  .  .  .  .  .  .  .  .  .  Name: "i"
   214  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   215  .  .  .  .  .  .  .  .  .  .  Kind: var
   216  .  .  .  .  .  .  .  .  .  .  Name: "i"
   217  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 209)
   218  .  .  .  .  .  .  .  .  .  .  Data: nil
   219  .  .  .  .  .  .  .  .  .  .  Type: nil
   220  .  .  .  .  .  .  .  .  .  }
   221  .  .  .  .  .  .  .  .  }
   222  .  .  .  .  .  .  .  }
   223  .  .  .  .  .  .  .  TokPos: ast_test.go:14:8
   224  .  .  .  .  .  .  .  Tok: :=
   225  .  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {
   226  .  .  .  .  .  .  .  .  0: *ast.BasicLit {
   227  .  .  .  .  .  .  .  .  .  ValuePos: ast_test.go:14:11
   228  .  .  .  .  .  .  .  .  .  Kind: INT
   229  .  .  .  .  .  .  .  .  .  Value: "1"
   230  .  .  .  .  .  .  .  .  }
   231  .  .  .  .  .  .  .  }
   232  .  .  .  .  .  .  }
   233  .  .  .  .  .  .  Cond: *ast.BinaryExpr {
   234  .  .  .  .  .  .  .  X: *ast.Ident {
   235  .  .  .  .  .  .  .  .  NamePos: ast_test.go:14:14
   236  .  .  .  .  .  .  .  .  Name: "i"
   237  .  .  .  .  .  .  .  .  Obj: *(obj @ 214)
   238  .  .  .  .  .  .  .  }
   239  .  .  .  .  .  .  .  OpPos: ast_test.go:14:16
   240  .  .  .  .  .  .  .  Op: <
   241  .  .  .  .  .  .  .  Y: *ast.BasicLit {
   242  .  .  .  .  .  .  .  .  ValuePos: ast_test.go:14:18
   243  .  .  .  .  .  .  .  .  Kind: INT
   244  .  .  .  .  .  .  .  .  Value: "10"
   245  .  .  .  .  .  .  .  }
   246  .  .  .  .  .  .  }
   247  .  .  .  .  .  .  Post: *ast.IncDecStmt {
   248  .  .  .  .  .  .  .  X: *ast.Ident {
   249  .  .  .  .  .  .  .  .  NamePos: ast_test.go:14:22
   250  .  .  .  .  .  .  .  .  Name: "i"
   251  .  .  .  .  .  .  .  .  Obj: *(obj @ 214)
   252  .  .  .  .  .  .  .  }
   253  .  .  .  .  .  .  .  TokPos: ast_test.go:14:23
   254  .  .  .  .  .  .  .  Tok: ++
   255  .  .  .  .  .  .  }
   256  .  .  .  .  .  .  Body: *ast.BlockStmt {
   257  .  .  .  .  .  .  .  Lbrace: ast_test.go:14:26
   258  .  .  .  .  .  .  .  List: []ast.Stmt (len = 1) {
   259  .  .  .  .  .  .  .  .  0: *ast.IfStmt {
   260  .  .  .  .  .  .  .  .  .  If: ast_test.go:15:3
   261  .  .  .  .  .  .  .  .  .  Init: nil
   262  .  .  .  .  .  .  .  .  .  Cond: *ast.BinaryExpr {
   263  .  .  .  .  .  .  .  .  .  .  X: *ast.BinaryExpr {
   264  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
   265  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: ast_test.go:15:6
   266  .  .  .  .  .  .  .  .  .  .  .  .  Name: "i"
   267  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 214)
   268  .  .  .  .  .  .  .  .  .  .  .  }
   269  .  .  .  .  .  .  .  .  .  .  .  OpPos: ast_test.go:15:7
   270  .  .  .  .  .  .  .  .  .  .  .  Op: %
   271  .  .  .  .  .  .  .  .  .  .  .  Y: *ast.Ident {
   272  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: ast_test.go:15:8
   273  .  .  .  .  .  .  .  .  .  .  .  .  Name: "x"
   274  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 188)
   275  .  .  .  .  .  .  .  .  .  .  .  }
   276  .  .  .  .  .  .  .  .  .  .  }
   277  .  .  .  .  .  .  .  .  .  .  OpPos: ast_test.go:15:10
   278  .  .  .  .  .  .  .  .  .  .  Op: ==
   279  .  .  .  .  .  .  .  .  .  .  Y: *ast.BasicLit {
   280  .  .  .  .  .  .  .  .  .  .  .  ValuePos: ast_test.go:15:13
   281  .  .  .  .  .  .  .  .  .  .  .  Kind: INT
   282  .  .  .  .  .  .  .  .  .  .  .  Value: "0"
   283  .  .  .  .  .  .  .  .  .  .  }
   284  .  .  .  .  .  .  .  .  .  }
   285  .  .  .  .  .  .  .  .  .  Body: *ast.BlockStmt {
   286  .  .  .  .  .  .  .  .  .  .  Lbrace: ast_test.go:15:15
   287  .  .  .  .  .  .  .  .  .  .  List: []ast.Stmt (len = 1) {
   288  .  .  .  .  .  .  .  .  .  .  .  0: *ast.ExprStmt {
   289  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.CallExpr {
   290  .  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
   291  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
   292  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: ast_test.go:16:4
   293  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "fmt"
   294  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
   295  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   296  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   297  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: ast_test.go:16:8
   298  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Println"
   299  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
   300  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   301  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   302  .  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: ast_test.go:16:15
   303  .  .  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 4) {
   304  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.BasicLit {
   305  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: ast_test.go:16:16
   306  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING
   307  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: "\"число\""
   308  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   309  .  .  .  .  .  .  .  .  .  .  .  .  .  .  1: *ast.Ident {
   310  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: ast_test.go:16:30
   311  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "i"
   312  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 214)
   313  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   314  .  .  .  .  .  .  .  .  .  .  .  .  .  .  2: *ast.BasicLit {
   315  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: ast_test.go:16:33
   316  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING
   317  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: "\"делится на\""
   318  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   319  .  .  .  .  .  .  .  .  .  .  .  .  .  .  3: *ast.Ident {
   320  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: ast_test.go:16:56
   321  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "x"
   322  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 188)
   323  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   324  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   325  .  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
   326  .  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: ast_test.go:16:57
   327  .  .  .  .  .  .  .  .  .  .  .  .  }
   328  .  .  .  .  .  .  .  .  .  .  .  }
   329  .  .  .  .  .  .  .  .  .  .  }
   330  .  .  .  .  .  .  .  .  .  .  Rbrace: ast_test.go:17:3
   331  .  .  .  .  .  .  .  .  .  }
   332  .  .  .  .  .  .  .  .  .  Else: *ast.BlockStmt {
   333  .  .  .  .  .  .  .  .  .  .  Lbrace: ast_test.go:17:10
   334  .  .  .  .  .  .  .  .  .  .  List: []ast.Stmt (len = 3) {
   335  .  .  .  .  .  .  .  .  .  .  .  0: *ast.AssignStmt {
   336  .  .  .  .  .  .  .  .  .  .  .  .  Lhs: []ast.Expr (len = 1) {
   337  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
   338  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: ast_test.go:18:4
   339  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "isDivisor"
   340  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   341  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
   342  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "isDivisor"
   343  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 335)
   344  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Data: nil
   345  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Type: nil
   346  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   347  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   348  .  .  .  .  .  .  .  .  .  .  .  .  }
   349  .  .  .  .  .  .  .  .  .  .  .  .  TokPos: ast_test.go:18:14
   350  .  .  .  .  .  .  .  .  .  .  .  .  Tok: :=
   351  .  .  .  .  .  .  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {
   352  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
   353  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: ast_test.go:18:17
   354  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "false"
   355  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
   356  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   357  .  .  .  .  .  .  .  .  .  .  .  .  }
   358  .  .  .  .  .  .  .  .  .  .  .  }
   359  .  .  .  .  .  .  .  .  .  .  .  1: *ast.ForStmt {
   360  .  .  .  .  .  .  .  .  .  .  .  .  For: ast_test.go:19:4
   361  .  .  .  .  .  .  .  .  .  .  .  .  Init: *ast.AssignStmt {
   362  .  .  .  .  .  .  .  .  .  .  .  .  .  Lhs: []ast.Expr (len = 1) {
   363  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
   364  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: ast_test.go:19:8
   365  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "j"
   366  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   367  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
   368  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "j"
   369  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 361)
   370  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Data: nil
   371  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Type: nil
   372  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   373  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   374  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   375  .  .  .  .  .  .  .  .  .  .  .  .  .  TokPos: ast_test.go:19:10
   376  .  .  .  .  .  .  .  .  .  .  .  .  .  Tok: :=
   377  .  .  .  .  .  .  .  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {
   378  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.BasicLit {
   379  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: ast_test.go:19:13
   380  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: INT
   381  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: "1"
   382  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   383  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   384  .  .  .  .  .  .  .  .  .  .  .  .  }
   385  .  .  .  .  .  .  .  .  .  .  .  .  Cond: *ast.BinaryExpr {
   386  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
   387  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: ast_test.go:19:16
   388  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "j"
   389  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 366)
   390  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   391  .  .  .  .  .  .  .  .  .  .  .  .  .  OpPos: ast_test.go:19:18
   392  .  .  .  .  .  .  .  .  .  .  .  .  .  Op: <
   393  .  .  .  .  .  .  .  .  .  .  .  .  .  Y: *ast.CallExpr {
   394  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.Ident {
   395  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: ast_test.go:19:20
   396  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "min"
   397  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 35)
   398  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   399  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: ast_test.go:19:23
   400  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 2) {
   401  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
   402  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: ast_test.go:19:24
   403  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "x"
   404  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 188)
   405  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   406  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  1: *ast.Ident {
   407  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: ast_test.go:19:27
   408  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "i"
   409  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 214)
   410  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   411  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   412  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
   413  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: ast_test.go:19:28
   414  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   415  .  .  .  .  .  .  .  .  .  .  .  .  }
   416  .  .  .  .  .  .  .  .  .  .  .  .  Post: *ast.IncDecStmt {
   417  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
   418  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: ast_test.go:19:31
   419  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "j"
   420  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 366)
   421  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   422  .  .  .  .  .  .  .  .  .  .  .  .  .  TokPos: ast_test.go:19:32
   423  .  .  .  .  .  .  .  .  .  .  .  .  .  Tok: ++
   424  .  .  .  .  .  .  .  .  .  .  .  .  }
   425  .  .  .  .  .  .  .  .  .  .  .  .  Body: *ast.BlockStmt {
   426  .  .  .  .  .  .  .  .  .  .  .  .  .  Lbrace: ast_test.go:19:35
   427  .  .  .  .  .  .  .  .  .  .  .  .  .  List: []ast.Stmt (len = 2) {
   428  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.IfStmt {
   429  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  If: ast_test.go:20:5
   430  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Init: nil
   431  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Cond: *ast.BinaryExpr {
   432  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.BinaryExpr {
   433  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.ParenExpr {
   434  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: ast_test.go:20:8
   435  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.BinaryExpr {
   436  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
   437  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: ast_test.go:20:9
   438  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "i"
   439  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 214)
   440  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   441  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  OpPos: ast_test.go:20:10
   442  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Op: *
   443  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Y: *ast.Ident {
   444  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: ast_test.go:20:11
   445  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "j"
   446  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 366)
   447  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   448  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   449  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: ast_test.go:20:12
   450  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   451  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  OpPos: ast_test.go:20:13
   452  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Op: %
   453  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Y: *ast.Ident {
   454  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: ast_test.go:20:14
   455  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "x"
   456  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 188)
   457  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   458  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   459  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  OpPos: ast_test.go:20:16
   460  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Op: ==
   461  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Y: *ast.BasicLit {
   462  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: ast_test.go:20:19
   463  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: INT
   464  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: "0"
   465  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   466  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   467  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Body: *ast.BlockStmt {
   468  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Lbrace: ast_test.go:20:21
   469  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  List: []ast.Stmt (len = 2) {
   470  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.AssignStmt {
   471  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Lhs: []ast.Expr (len = 1) {
   472  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
   473  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: ast_test.go:21:6
   474  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "isDivisor"
   475  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 340)
   476  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   477  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   478  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  TokPos: ast_test.go:21:16
   479  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Tok: =
   480  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {
   481  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
   482  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: ast_test.go:21:18
   483  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "true"
   484  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
   485  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   486  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   487  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   488  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  1: *ast.ExprStmt {
   489  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.CallExpr {
   490  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
   491  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
   492  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: ast_test.go:22:6
   493  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "fmt"
   494  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
   495  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   496  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   497  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: ast_test.go:22:10
   498  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Println"
   499  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
   500  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   501  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   502  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: ast_test.go:22:17
   503  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 4) {
   504  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.BasicLit {
   505  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: ast_test.go:22:18
   506  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING
   507  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: "\"число\""
   508  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   509  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  1: *ast.Ident {
   510  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: ast_test.go:22:32
   511  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "i"
   512  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 214)
   513  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   514  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  2: *ast.BasicLit {
   515  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: ast_test.go:22:35
   516  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING
   517  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: "\"имеет общий делитель с\""
   518  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   519  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  3: *ast.Ident {
   520  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: ast_test.go:22:80
   521  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "x"
   522  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 188)
   523  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   524  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   525  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
   526  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: ast_test.go:22:81
   527  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   528  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   529  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   530  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Rbrace: ast_test.go:23:5
   531  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   532  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Else: nil
   533  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   534  .  .  .  .  .  .  .  .  .  .  .  .  .  .  1: *ast.ExprStmt {
   535  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.CallExpr {
   536  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
   537  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
   538  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: ast_test.go:24:5
   539  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "fmt"
   540  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
   541  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   542  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   543  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: ast_test.go:24:9
   544  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Println"
   545  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
   546  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   547  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   548  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: ast_test.go:24:16
   549  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 2) {
   550  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.BasicLit {
   551  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: ast_test.go:24:17
   552  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING
   553  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: "\"DEBUG:\""
   554  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   555  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  1: *ast.BasicLit {
   556  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: ast_test.go:24:27
   557  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING
   558  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: "\"более сложные варианты делимости\""
   559  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   560  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   561  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
   562  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: ast_test.go:24:90
   563  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   564  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   565  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   566  .  .  .  .  .  .  .  .  .  .  .  .  .  Rbrace: ast_test.go:25:4
   567  .  .  .  .  .  .  .  .  .  .  .  .  }
   568  .  .  .  .  .  .  .  .  .  .  .  }
   569  .  .  .  .  .  .  .  .  .  .  .  2: *ast.IfStmt {
   570  .  .  .  .  .  .  .  .  .  .  .  .  If: ast_test.go:26:4
   571  .  .  .  .  .  .  .  .  .  .  .  .  Init: nil
   572  .  .  .  .  .  .  .  .  .  .  .  .  Cond: *ast.UnaryExpr {
   573  .  .  .  .  .  .  .  .  .  .  .  .  .  OpPos: ast_test.go:26:7
   574  .  .  .  .  .  .  .  .  .  .  .  .  .  Op: !
   575  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
   576  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: ast_test.go:26:8
   577  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "isDivisor"
   578  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 340)
   579  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   580  .  .  .  .  .  .  .  .  .  .  .  .  }
   581  .  .  .  .  .  .  .  .  .  .  .  .  Body: *ast.BlockStmt {
   582  .  .  .  .  .  .  .  .  .  .  .  .  .  Lbrace: ast_test.go:26:18
   583  .  .  .  .  .  .  .  .  .  .  .  .  .  List: []ast.Stmt (len = 1) {
   584  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.ExprStmt {
   585  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.CallExpr {
   586  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
   587  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
   588  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: ast_test.go:27:5
   589  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "fmt"
   590  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
   591  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   592  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   593  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: ast_test.go:27:9
   594  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Println"
   595  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
   596  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   597  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   598  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: ast_test.go:27:16
   599  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 5) {
   600  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.BasicLit {
   601  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: ast_test.go:27:17
   602  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING
   603  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: "\"число\""
   604  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   605  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  1: *ast.BasicLit {
   606  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: ast_test.go:27:31
   607  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING
   608  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: "\"DEBUG:\""
   609  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   610  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  2: *ast.Ident {
   611  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: ast_test.go:27:41
   612  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "i"
   613  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 214)
   614  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   615  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  3: *ast.BasicLit {
   616  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: ast_test.go:27:44
   617  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING
   618  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: "\"не имеет общий делитель с\""
   619  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   620  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  4: *ast.Ident {
   621  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: ast_test.go:27:94
   622  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "x"
   623  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 188)
   624  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   625  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   626  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
   627  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: ast_test.go:27:95
   628  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   629  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   630  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   631  .  .  .  .  .  .  .  .  .  .  .  .  .  Rbrace: ast_test.go:28:4
   632  .  .  .  .  .  .  .  .  .  .  .  .  }
   633  .  .  .  .  .  .  .  .  .  .  .  .  Else: nil
   634  .  .  .  .  .  .  .  .  .  .  .  }
   635  .  .  .  .  .  .  .  .  .  .  }
   636  .  .  .  .  .  .  .  .  .  .  Rbrace: ast_test.go:29:3
   637  .  .  .  .  .  .  .  .  .  }
   638  .  .  .  .  .  .  .  .  }
   639  .  .  .  .  .  .  .  }
   640  .  .  .  .  .  .  .  Rbrace: ast_test.go:30:2
   641  .  .  .  .  .  .  }
   642  .  .  .  .  .  }
   643  .  .  .  .  }
   644  .  .  .  .  Rbrace: ast_test.go:31:1
   645  .  .  .  }
   646  .  .  }
   647  .  }
   648  .  FileStart: ast_test.go:1:1
   649  .  FileEnd: ast_test.go:31:3
   650  .  Scope: *ast.Scope {
   651  .  .  Outer: nil
   652  .  .  Objects: map[string]*ast.Object (len = 2) {
   653  .  .  .  "min": *(obj @ 35)
   654  .  .  .  "main": *(obj @ 162)
   655  .  .  }
   656  .  }
   657  .  Imports: []*ast.ImportSpec (len = 1) {
   658  .  .  0: *(obj @ 15)
   659  .  }
   660  .  Unresolved: []*ast.Ident (len = 8) {
   661  .  .  0: *(obj @ 75)
   662  .  .  1: *(obj @ 92)
   663  .  .  2: *(obj @ 291)
   664  .  .  3: *(obj @ 352)
   665  .  .  4: *(obj @ 481)
   666  .  .  5: *(obj @ 491)
   667  .  .  6: *(obj @ 537)
   668  .  .  7: *(obj @ 587)
   669  .  }
   670  .  Comments: nil
   671  }
